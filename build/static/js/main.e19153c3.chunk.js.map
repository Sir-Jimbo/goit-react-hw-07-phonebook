{"version":3,"sources":["components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/Header/Header.module.css","components/Notification/Notification.module.css","components/ContactList/ContactList.module.css","components/Logo/Logo.module.css","components/Section/Section.module.css","components/PhoneBook/PhoneBook.module.css","components/Logo/Logo.jsx","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Section/Section.jsx","redux/phonebook/phonebook-actions.js","components/Notification/Notification.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","App.jsx","redux/phonebook/phonebook-reducers.js","redux/store.js","index.jsx","components/ContactForm/ContactForm.module.css"],"names":["module","exports","Logo","className","s","logo","Header","container","CSSTransition","in","appear","classNames","timeout","unmountOnExit","Layout","children","Section","addContact","createAction","name","number","payload","id","uuidv4","deleteContact","changeFilter","Notification","message","overlay","ContactForm","state","error","isShowMessage","setState","setTimeout","handleChange","e","currentTarget","value","handleSubmit","preventDefault","props","contacts","find","item","toLowerCase","onSubmit","reset","this","label","input","type","placeholder","onChange","button","Component","connect","phonebook","dispatch","actions","filter","length","title","Contact","onClick","contact","getVisibleContacts","allContacts","normalizedFilter","includes","onDeleteContact","TransitionGroup","component","list","map","contactsReducer","createReducer","filterReducer","_","phonebookReducer","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.e19153c3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__Vdw_t\",\"title\":\"Filter_title__3vBAf\",\"label\":\"Filter_label__1vCGm\",\"input\":\"Filter_input__2LB2e\",\"appear\":\"Filter_appear__3hRqd\",\"appearActive\":\"Filter_appearActive__298BS\",\"exit\":\"Filter_exit__2MBV0\",\"exitActive\":\"Filter_exitActive__1kSJw\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__1tOfY\",\"button\":\"Contact_button__2qs01\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__1HnhE\",\"appear\":\"Header_appear__Bdc3R\",\"appearActive\":\"Header_appearActive__2Znic\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Notification_overlay__36vmU\",\"message\":\"Notification_message__1Ar_E\",\"enter\":\"Notification_enter__3JFNR\",\"enterActive\":\"Notification_enterActive__v9dpm\",\"exit\":\"Notification_exit__sNiA6\",\"exitActive\":\"Notification_exitActive__yN64x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__1xN8a\",\"enterActive\":\"ContactList_enterActive__3iGN2\",\"exit\":\"ContactList_exit__3zMIZ\",\"exitActive\":\"ContactList_exitActive__42x-6\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__17WNY\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__3lzXt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"PhoneBook_enter__36EFg\",\"enterActive\":\"PhoneBook_enterActive__16VSZ\",\"exit\":\"PhoneBook_exit__12H_9\",\"exitActive\":\"PhoneBook_exitActive__3qsZN\"};","import React from 'react';\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n   return (\r\n      <h1 className={s.logo}>Phonebook</h1>\r\n   )\r\n}\r\n\r\nexport default Logo;","import Logo from 'components/Logo/Logo';\r\nimport React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n   return (\r\n      <header className={s.container}>\r\n         <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            classNames={s}\r\n            timeout={500}\r\n            unmountOnExit>\r\n            <Logo />\r\n         </CSSTransition>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../Header/Header'\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n   return (\r\n      <>\r\n         <Header />\r\n         <main>\r\n            {children}\r\n         </main>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\n\r\nconst Section = ({ children }) => {\r\n   return (\r\n      <>\r\n         <section className={s.container}>\r\n            {children}\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Section;","//redux\r\n/*\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport phonebookTypes from 'redux/phonebook/phonebook-types';\r\n\r\n\r\nexport const addContact = (name, number) => ({\r\n   type: phonebookTypes.ADD,\r\n   payload: {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n   }\r\n});\r\n\r\nexport const deleteContact = contactId => ({\r\n   type: phonebookTypes.DELETE,\r\n   payload: contactId\r\n});\r\n\r\nexport const changeFilter = value => ({\r\n   type: phonebookTypes.CHANGE_FILTER,\r\n   payload: value\r\n});*/\r\n\r\n\r\n//redux/toolkit\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const addContact = createAction('phonebook/addContact', (name, number) => ({\r\n   payload: {\r\n      id: uuidv4(),\r\n      name: name,\r\n      number: number,\r\n   },\r\n}));\r\nexport const deleteContact = createAction('phonebook/deleteContact');\r\nexport const changeFilter = createAction('phonebook/changeFilter');\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => {\r\n   return (\r\n      <div className={s.overlay}>\r\n         <p className={s.message}>\r\n            {message}\r\n         </p>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Notification;","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Notification from 'components/Notification/Notification';\r\nimport s from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n\r\n   state = {\r\n      name: '',\r\n      number: '',\r\n      message: null,\r\n      error: false,\r\n   }\r\n\r\n   isShowMessage = (error) => {\r\n      this.setState({ message: error });\r\n      setTimeout(() => {\r\n         this.setState({ message: null });\r\n      }, 2500);\r\n   }\r\n\r\n\r\n   handleChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n\r\n      this.setState({\r\n         [name]: value,\r\n      })\r\n   }\r\n\r\n\r\n   handleSubmit = e => {\r\n      const { name, number } = this.state;\r\n      e.preventDefault();\r\n\r\n      if (name === '') {\r\n         this.isShowMessage('Enter name, please!');\r\n         return;\r\n\r\n      }\r\n      if (number === '') {\r\n         this.isShowMessage('Enter phone, please!');\r\n         return;\r\n      }\r\n\r\n      if (\r\n         this.props.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\r\n         this.isShowMessage(`${name} is already in contacts.`);\r\n         return;\r\n      }\r\n\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n   }\r\n\r\n\r\n   reset = () => (\r\n      this.setState({ name: \"\", number: \"\" })\r\n   )\r\n\r\n   render() {\r\n\r\n      const { name, number, message } = this.state;\r\n      return (\r\n         <>\r\n            <CSSTransition\r\n               in={message}\r\n               timeout={250}\r\n               classNames={s}\r\n               unmountOnExit\r\n            >\r\n               <Notification\r\n                  message={message} />\r\n            </CSSTransition>\r\n            <form className={s.container} onSubmit={this.handleSubmit}>\r\n\r\n               <label className={s.label}>\r\n                  Name\r\n               </label>\r\n               <input\r\n                  className={s.input}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"enter your name\"\r\n                  value={name}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <label className={s.label}>\r\n                  Phone number\r\n               </label>\r\n               <input\r\n                  className={s.input}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  placeholder=\"enter your number\"\r\n                  value={number}\r\n                  onChange={this.handleChange} />\r\n               <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n         </>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = state => ({\r\n   contacts: state.phonebook.contacts,\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onSubmit: (name, number) => dispatch(actions.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange, contacts }) => {\r\n   return (\r\n      <CSSTransition\r\n         in={contacts.length > 1}\r\n         appear={true}\r\n         timeout={250}\r\n         classNames={s}\r\n         unmountOnExit\r\n      >\r\n         <div className={s.container}>\r\n\r\n            <h2 className={s.title}> Contacts </h2>\r\n            <label className={s.label}>\r\n               Find contacts by name:\r\n            </label>\r\n            <input\r\n               className={s.input}\r\n               placeholder=\"search by name\"\r\n               type=\"text\"\r\n               value={value}\r\n               onChange={onChange}\r\n            />\r\n\r\n         </div >\r\n      </CSSTransition>\r\n   );\r\n}\r\nconst mapStateToProps = state => ({\r\n   contacts: state.phonebook.contacts,\r\n   value: state.phonebook.filter\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onChange: (e) => dispatch(actions.changeFilter(e.currentTarget.value)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onClick }) => {\r\n   return (\r\n\r\n      <li key={id} className={s.item}>\r\n         <p className={s.contact}>{name}</p>\r\n         <p className={s.contact}>{number}</p>\r\n         <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={onClick}\r\n         >\r\n            x\r\n                  </button>\r\n      </li>\r\n   )\r\n}\r\n\r\nContact.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default Contact;","import { connect } from 'react-redux';\r\nimport * as actions from '../../redux/phonebook/phonebook-actions';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Contact from 'components/Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n   return (\r\n      <TransitionGroup\r\n         component=\"ul\"\r\n         className={s.list}\r\n      >\r\n         {contacts.map(({ id, name, number }) => (\r\n            <CSSTransition\r\n               key={id}\r\n               timeout={250}\r\n               classNames={s}\r\n            >\r\n               <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  number={number}\r\n                  onClick={() => onDeleteContact(id)}\r\n               />\r\n            </CSSTransition>\r\n         ))\r\n         }\r\n      </TransitionGroup >\r\n\r\n   )\r\n}\r\n\r\nconst getVisibleContacts = (allContacts, filter) => {\r\n   const normalizedFilter = filter.toLowerCase();\r\n   return allContacts.filter(({ name }) =>\r\n      name.toLowerCase().includes(normalizedFilter),\r\n   );\r\n};\r\n\r\nconst mapStateToProps = ({ phonebook: { contacts, filter } }) => ({\r\n   contacts: getVisibleContacts(contacts, filter),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onDeleteContact: id => dispatch(actions.deleteContact(id)),\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Layout from 'components/Layout/Layout';\r\nimport Section from 'components/Section/Section';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport s from './components/PhoneBook/PhoneBook.module.css';\r\n\r\nfunction App({ contacts }) {\r\n  return (\r\n    <Layout>\r\n      <Section>\r\n        <ContactForm />\r\n        <Filter />\r\n        <CSSTransition\r\n          in={contacts.length > 0}\r\n          timeout={250}\r\n          classNames={s}\r\n          unmountOnExit\r\n        >\r\n          <ContactList />\r\n        </CSSTransition>\r\n      </Section>\r\n    </Layout>\r\n  );\r\n}\r\n\r\n\r\nconst mapStateToProps = state => ({\r\n  contacts: state.phonebook.contacts,\r\n  value: state.phonebook.filter\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps)(App);","//redux\r\n/*\r\nimport { combineReducers } from 'redux';\r\nimport phonebookTypes from 'redux/phonebook/phonebook-types';\r\n\r\nconst contactsReducer = (state = [], { type, payload }) => {\r\n   switch (type) {\r\n      case phonebookTypes.ADD:\r\n         return [...state, payload];\r\n      case phonebookTypes.DELETE:\r\n         return state.filter(({ id }) => id !== payload)\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nconst filterReducer = (state = '', { type, payload }) => {\r\n   switch (type) {\r\n      case phonebookTypes.CHANGE_FILTER:\r\n         return payload;\r\n      default:\r\n         return state;\r\n   }\r\n};\r\n\r\nconst phonebookReducer = combineReducers({\r\n   contacts: contactsReducer,\r\n   filter: filterReducer\r\n});\r\n\r\nexport default phonebookReducer;\r\n*/\r\n\r\nimport { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport * as actions from './phonebook-actions';\r\n\r\nconst contactsReducer = createReducer([], {\r\n   [actions.addContact]: (state, { payload }) => [...state, payload],\r\n   [actions.deleteContact]: (state, { payload }) => state.filter(({ id }) => id !== payload)\r\n});\r\n\r\nconst filterReducer = createReducer('', {\r\n   [actions.changeFilter]: (_, { payload }) => payload\r\n});\r\n\r\nconst phonebookReducer = combineReducers({\r\n   contacts: contactsReducer,\r\n   filter: filterReducer\r\n});\r\n\r\nexport default phonebookReducer;\r\n","//redux\r\n//import { combineReducers } from 'redux'; \r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n//import phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\n\r\n\r\n//const rootReducer = combineReducers({ //redux\r\n//   phonebook: phonebookReducer //redux\r\n//}) //redux\r\n\r\n//const store = createStore(rootReducer, composeWithDevTools()); //redux\r\n//export default store;\r\n\r\n//redux/toolkit\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\n\r\nconst middleware = [\r\n   ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n   }),\r\n   logger];\r\n\r\nconst phonebookPersistConfig = {\r\n   key: 'phonebook',\r\n   storage,\r\n   blacklist: ['filter']\r\n};\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      phonebook: persistReducer(phonebookPersistConfig, phonebookReducer)\r\n   },\r\n   middleware,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './redux/store';\r\nimport { PersistGate } from 'redux-persist/integration/react'\r\n//import { saveContact, deleteContact } from 'redux/actions';\r\n\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store.store}>\r\n      <PersistGate loading={null} persistor={store.persistor}>\r\n        <App />\r\n      </PersistGate>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root'),\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__3UNdU\",\"label\":\"ContactForm_label__1Kbd6\",\"input\":\"ContactForm_input__3FToW\",\"button\":\"ContactForm_button__HOwas\"};"],"sourceRoot":""}