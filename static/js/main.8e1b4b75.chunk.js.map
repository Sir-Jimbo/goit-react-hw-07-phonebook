{"version":3,"sources":["components/ContactForm/ContactForm.module.css","components/Filter/Filter.module.css","components/Contact/Contact.module.css","components/Notification/Notification.module.css","components/Header/Header.module.css","components/ContactList/ContactList.module.css","components/Logo/Logo.module.css","components/Section/Section.module.css","components/App/App.module.css","components/Logo/Logo.jsx","components/Header/Header.jsx","components/Layout/Layout.jsx","components/Section/Section.jsx","redux/phonebook/phonebook-actions.js","redux/phonebook/phonebook-operations.js","redux/phonebook/phonebook-selectors.js","components/Notification/Notification.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/Contact/Contact.jsx","components/ContactList/ContactList.jsx","components/Spinner/Spinner.jsx","components/App/App.jsx","redux/phonebook/phonebook-reducers.js","redux/store.js","index.jsx"],"names":["module","exports","Logo","className","s","logo","Header","container","CSSTransition","in","appear","classNames","timeout","unmountOnExit","Layout","children","Section","fetchContactRequest","createAction","fetchContactSuccess","fetchContactError","addContactRequest","addContactSuccess","addContactError","deleteContactRequest","deleteContactSuccess","deleteContactError","changeFilter","clearError","axios","defaults","baseURL","operations","fetchContacts","dispatch","get","then","data","catch","error","addContact","name","number","contact","post","deleteContact","contactId","delete","getFilter","state","phonebook","filter","getAllContacts","contacts","selectors","getLoading","loading","getVisibleContacts","createSelector","normalizedFilter","toLowerCase","includes","getError","Notification","this","props","setTimeout","message","overlay","Component","connect","phonebookActions","ContactForm","isShowMessage","setState","handleChange","e","currentTarget","value","handleSubmit","preventDefault","find","item","onSubmit","reset","label","input","type","placeholder","onChange","button","onChangeFilter","target","length","title","Contact","id","onClick","onDeleteContact","TransitionGroup","component","list","map","Spinner","color","height","width","App","isLoadingContacts","initialState","createReducer","_","payload","combineReducers","middleware","getDefaultMiddleware","logger","store","configureStore","reducer","phonebookReducer","devTools","process","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.8e1b4b75.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"ContactForm_container__lLG3q\",\"label\":\"ContactForm_label__wpDY7\",\"input\":\"ContactForm_input__LqrUC\",\"button\":\"ContactForm_button__13cRB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__1QJsW\",\"title\":\"Filter_title__2s3aK\",\"label\":\"Filter_label__2fmMx\",\"input\":\"Filter_input__9P3Jk\",\"appear\":\"Filter_appear__ORNu8\",\"appearActive\":\"Filter_appearActive__17dkQ\",\"exit\":\"Filter_exit__30djz\",\"exitActive\":\"Filter_exitActive__3g_Cr\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Contact_item__25kig\",\"button\":\"Contact_button__3pb4x\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"Notification_overlay__Gvk-h\",\"message\":\"Notification_message__31VpN\",\"enter\":\"Notification_enter__2iUMc\",\"enterActive\":\"Notification_enterActive__3dSFK\",\"exit\":\"Notification_exit__2Zncr\",\"exitActive\":\"Notification_exitActive__2S3dL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Header_container__2zNAp\",\"appear\":\"Header_appear__2tteo\",\"appearActive\":\"Header_appearActive__kmeA-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"ContactList_enter__1lJCg\",\"enterActive\":\"ContactList_enterActive__3zJpv\",\"exit\":\"ContactList_exit__2FyYB\",\"exitActive\":\"ContactList_exitActive__3OuWi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Logo_logo__17Iof\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__2OqoC\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"enter\":\"App_enter__3ySND\",\"enterActive\":\"App_enterActive__3yFIT\",\"exit\":\"App_exit__3Owq2\",\"exitActive\":\"App_exitActive__VhWOp\"};","import React from 'react';\r\nimport s from './Logo.module.css';\r\n\r\nconst Logo = () => {\r\n   return (\r\n      <h1 className={s.logo}>Phonebook</h1>\r\n   )\r\n}\r\n\r\nexport default Logo;","import Logo from 'components/Logo/Logo';\r\nimport React from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport s from './Header.module.css';\r\n\r\nconst Header = () => {\r\n   return (\r\n      <header className={s.container}>\r\n         <CSSTransition\r\n            in={true}\r\n            appear={true}\r\n            classNames={s}\r\n            timeout={500}\r\n            unmountOnExit>\r\n            <Logo />\r\n         </CSSTransition>\r\n      </header>\r\n   );\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport Header from '../Header/Header'\r\n\r\n\r\nconst Layout = ({ children }) => {\r\n   return (\r\n      <>\r\n         <Header />\r\n         <main>\r\n            {children}\r\n         </main>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Layout;","import React from 'react';\r\nimport s from './Section.module.css';\r\n\r\n\r\nconst Section = ({ children }) => {\r\n   return (\r\n      <>\r\n         <section className={s.container}>\r\n            {children}\r\n         </section>\r\n      </>\r\n   );\r\n};\r\n\r\nexport default Section;","\r\nimport { createAction } from '@reduxjs/toolkit';\r\n\r\n\r\nexport const fetchContactRequest = createAction('contacts/fetchContactRequest');\r\nexport const fetchContactSuccess = createAction('contacts/fetchContactSuccess');\r\nexport const fetchContactError = createAction('contacts/fetchContactError');\r\n\r\nexport const addContactRequest = createAction('contacts/addContactRequest');\r\nexport const addContactSuccess = createAction('contacts/addContactSuccess');\r\nexport const addContactError = createAction('contacts/addContactError');\r\n\r\nexport const deleteContactRequest = createAction('contacts/deleteContactRequest');\r\nexport const deleteContactSuccess = createAction('contacts/deleteContactSuccess');\r\nexport const deleteContactError = createAction('contacts/deleteContactError');\r\n\r\n\r\nexport const changeFilter = createAction('contacts/changeFilter');\r\n\r\nexport const clearError = createAction('contacts/clearError');","import axios from 'axios';\nimport {\n    fetchContactRequest,\n    fetchContactSuccess,\n    fetchContactError,\n    addContactRequest,\n    addContactSuccess,\n    addContactError,\n    deleteContactRequest,\n    deleteContactSuccess,\n    deleteContactError\n} from './phonebook-actions';\n\naxios.defaults.baseURL = 'http://localhost:4040';\n\nconst fetchContacts = () => dispatch => {\n    dispatch(fetchContactRequest());\n\n    axios\n        .get('/contacts')\n        .then(({ data }) => dispatch(fetchContactSuccess(data)))\n        .catch(error => dispatch(fetchContactError(error)));\n};\n\n// Option with async/await, try/catch\n\n// const fetchContacts = () => async dispatch => {\n//     dispatch(fetchContactRequest());\n\n//     try {\n//         const { data } = await axios.get('/contacts');\n\n//         dispatch(fetchContactSuccess(data));\n//     } catch (error) {\n//         dispatch(fetchContactSuccess(error));\n//     }\n// }\n\nconst addContact = (name, number) => dispatch => {\n    const contact = {\n        name,\n        number,\n    };\n\n    dispatch(addContactRequest());\n\n    axios\n        .post('/contacts', contact)\n        .then(({ data }) => dispatch(addContactSuccess(data)))\n        .catch(error => dispatch(addContactError(error)));\n};\n\nconst deleteContact = (contactId) => dispatch => {\n    dispatch(deleteContactRequest());\n\n    axios\n        .delete(`/contacts/${contactId}`)\n        .then(() => dispatch(deleteContactSuccess(contactId)))\n        .catch(error => dispatch(deleteContactError(error)));\n};\n\nconst operations = {\n    fetchContacts,\n    addContact,\n    deleteContact\n};\n\nexport default operations;","import { createSelector } from '@reduxjs/toolkit';\n\nconst getLoading = state => state.phonebook.loading;\n\nconst getFilter = state => state.phonebook.filter;\n\nconst getAllContacts = state => state.phonebook.contacts;\n\nconst getError = state => state.phonebook.error;\n\n//Без мемоизации\n// const getVisibleContacts = state => {\n//     const contacts = getAllContacts(state);\n//     const filter = getFilter(state);\n//     const normalizedFilter = filter.toLowerCase();\n\n//     return contacts.filter(({ name }) =>\n//         name.toLowerCase().includes(normalizedFilter),\n//     );\n// };\n\n//С мемоизацией\nconst getVisibleContacts = createSelector(\n    [getAllContacts, getFilter],\n    (contacts, filter) => {\n        const normalizedFilter = filter.toLowerCase();\n\n        return contacts.filter(({ name }) =>\n            name.toLowerCase().includes(normalizedFilter),\n        );\n    },\n);\n\nconst selectors = {\n    getLoading,\n    getFilter,\n    getVisibleContacts,\n    getAllContacts,\n    getError\n};\n\nexport default selectors;","import React, { Component } from 'react';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport { connect } from 'react-redux';\r\nimport s from './Notification.module.css';\r\n\r\nclass Notification extends Component {\r\n   componentDidMount() {\r\n      if (this.props.error) {\r\n         setTimeout(() => {\r\n            this.props.clearError();\r\n         }, 2500);\r\n      }\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <CSSTransition\r\n            in={this.props.message}\r\n            timeout={250}\r\n            classNames={s}\r\n            unmountOnExit\r\n         >\r\n            <div className={s.overlay} >\r\n               <p className={s.message}>\r\n                  {this.props.message}\r\n               </p>\r\n            </div>\r\n         </CSSTransition>\r\n      );\r\n   };\r\n}\r\nconst mapStateToProps = (state) => ({\r\n   error: selectors.getError(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   clearError: () => dispatch(phonebookActions.clearError())\r\n});\r\n\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Notification);","import { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations'\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport Notification from '../../components/Notification/Notification';\r\nimport s from './ContactForm.module.css'\r\n\r\nclass ContactForm extends Component {\r\n\r\n   state = {\r\n      name: '',\r\n      number: '',\r\n      message: null,\r\n   }\r\n\r\n   isShowMessage = (error) => {\r\n      this.setState({ message: false });\r\n      setTimeout(() => {\r\n         this.setState({ message: null });\r\n      }, 2500);\r\n   }\r\n\r\n\r\n   handleChange = e => {\r\n      const { name, value } = e.currentTarget;\r\n\r\n      this.setState({\r\n         [name]: value,\r\n      })\r\n   }\r\n\r\n\r\n   handleSubmit = e => {\r\n      const { name, number } = this.state;\r\n      e.preventDefault();\r\n\r\n      if (name === '') {\r\n         this.isShowMessage('Enter name, please!');\r\n         return;\r\n\r\n      }\r\n      if (number === '') {\r\n         this.isShowMessage('Enter phone, please!');\r\n         return;\r\n      }\r\n\r\n      if (\r\n         this.props.contacts.find((item) => item.name.toLowerCase() === name.toLowerCase())) {\r\n         this.isShowMessage(`${name} is already in contacts.`);\r\n         return;\r\n      }\r\n\r\n      this.props.onSubmit(name, number);\r\n      this.reset();\r\n   }\r\n\r\n\r\n   reset = () => (\r\n      this.setState({ name: \"\", number: \"\" })\r\n   )\r\n\r\n   render() {\r\n\r\n      const { name, number, message } = this.state;\r\n      return (\r\n         <>\r\n\r\n            <Notification\r\n               message={message} />\r\n\r\n            <form className={s.container} onSubmit={this.handleSubmit}>\r\n\r\n               <label className={s.label}>\r\n                  Name\r\n               </label>\r\n               <input\r\n                  className={s.input}\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  placeholder=\"enter your name\"\r\n                  value={name}\r\n                  onChange={this.handleChange}\r\n               />\r\n               <label className={s.label}>\r\n                  Phone number\r\n               </label>\r\n               <input\r\n                  className={s.input}\r\n                  type=\"tel\"\r\n                  name=\"number\"\r\n                  placeholder=\"enter your number\"\r\n                  value={number}\r\n                  onChange={this.handleChange} />\r\n               <button className={s.button} type=\"submit\">Add contact</button>\r\n            </form>\r\n         </>\r\n      );\r\n   }\r\n}\r\nconst mapStateToProps = (state) => ({\r\n   contacts: selectors.getAllContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onSubmit: (name, number) => dispatch(operations.addContact(name, number)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm);","import { connect } from 'react-redux';\r\nimport * as phonebookActions from '../../redux/phonebook/phonebook-actions';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport s from './Filter.module.css';\r\n\r\nconst Filter = ({ value, onChange, contacts }) => {\r\n   return (\r\n      <CSSTransition\r\n         in={contacts.length > 1}\r\n         appear={true}\r\n         timeout={250}\r\n         classNames={s}\r\n         unmountOnExit\r\n      >\r\n         <div className={s.container}>\r\n\r\n            <h2 className={s.title}> Contacts </h2>\r\n            <label className={s.label}>\r\n               Find contacts by name:\r\n            </label>\r\n            <input\r\n               className={s.input}\r\n               placeholder=\"search by name\"\r\n               type=\"text\"\r\n               value={value}\r\n               onChange={onChange}\r\n            />\r\n\r\n         </div >\r\n      </CSSTransition>\r\n   );\r\n}\r\nconst mapStateToProps = (state) => ({\r\n   value: selectors.getFilter(state),\r\n   contacts: selectors.getAllContacts(state),\r\n})\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onChangeFilter: e => dispatch(phonebookActions.changeFilter(e.target.value))\r\n})\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);","\r\nimport PropTypes from 'prop-types';\r\nimport s from './Contact.module.css';\r\n\r\nconst Contact = ({ id, name, number, onClick }) => {\r\n   return (\r\n\r\n      <li key={id} className={s.item}>\r\n         <p className={s.contact}>{name}</p>\r\n         <p className={s.contact}>{number}</p>\r\n         <button\r\n            className={s.button}\r\n            type=\"button\"\r\n            onClick={onClick}\r\n         >\r\n            x\r\n                  </button>\r\n      </li>\r\n   )\r\n}\r\n\r\nContact.propTypes = {\r\n   name: PropTypes.string.isRequired,\r\n   number: PropTypes.string.isRequired,\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport { CSSTransition, TransitionGroup } from 'react-transition-group';\r\nimport Contact from 'components/Contact/Contact';\r\nimport s from './ContactList.module.css';\r\n\r\nconst ContactList = ({ contacts, onDeleteContact }) => {\r\n   return (\r\n      <TransitionGroup\r\n         component=\"ul\"\r\n         className={s.list}\r\n      >\r\n         {contacts.map(({ id, name, number }) => (\r\n            <CSSTransition\r\n               key={id}\r\n               timeout={250}\r\n               classNames={s}\r\n            >\r\n               <Contact\r\n                  id={id}\r\n                  name={name}\r\n                  number={number}\r\n                  onClick={() => onDeleteContact(id)}\r\n               />\r\n            </CSSTransition>\r\n         ))\r\n         }\r\n      </TransitionGroup >\r\n\r\n   )\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n   contacts: selectors.getVisibleContacts(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n   onDeleteContact: id => dispatch(operations.deleteContact(id)),\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);","import React from 'react';\r\nimport Loader from 'react-loader-spinner';\r\n\r\nconst Spinner = () => (\r\n   <Loader\r\n      type=\"Circles\"\r\n      color=\"palevioletred\"\r\n      height={260}\r\n      width={260}\r\n      timeout={3000}\r\n   />\r\n);\r\n\r\nexport default Spinner;","import React, { Component } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { CSSTransition } from 'react-transition-group';\r\nimport Layout from 'components/Layout/Layout';\r\nimport Section from 'components/Section/Section';\r\nimport ContactForm from 'components/ContactForm/ContactForm';\r\nimport Filter from 'components/Filter/Filter';\r\nimport ContactList from 'components/ContactList/ContactList';\r\nimport operations from '../../redux/phonebook/phonebook-operations';\r\nimport Spinner from '../Spinner/Spinner';\r\nimport Notification from '../Notification/Notification';\r\nimport selectors from '../../redux/phonebook/phonebook-selectors';\r\nimport s from './App.module.css';\r\n\r\nclass App extends Component {\r\n\r\n  componentDidMount() {\r\n    this.props.fetchContacts();\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Layout>\r\n        <Section>\r\n          {this.props.error &&\r\n            <Notification\r\n              message={`ERROR: ${this.props.error.message}.`} />}\r\n          <ContactForm />\r\n          <Filter />\r\n          {this.props.isLoadingContacts && <Spinner />}\r\n          <CSSTransition\r\n            in={this.props.contacts.length > 0}\r\n            timeout={250}\r\n            classNames={s}\r\n            unmountOnExit\r\n          >\r\n            <ContactList />\r\n          </CSSTransition>\r\n        </Section>\r\n      </Layout >\r\n    );\r\n  };\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => ({\r\n  contacts: selectors.getAllContacts(state),\r\n  isLoadingContacts: selectors.getLoading(state),\r\n  error: selectors.getError(state),\r\n});\r\n\r\nconst mapDispatchToProps = dispatch => ({\r\n  fetchContacts: () => dispatch(operations.fetchContacts())\r\n});\r\n\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import { combineReducers } from 'redux';\r\nimport { createReducer } from '@reduxjs/toolkit';\r\nimport {\r\n   fetchContactRequest,\r\n   fetchContactSuccess,\r\n   fetchContactError,\r\n   addContactRequest,\r\n   addContactSuccess,\r\n   addContactError,\r\n   deleteContactRequest,\r\n   deleteContactSuccess,\r\n   deleteContactError,\r\n   changeFilter,\r\n   clearError\r\n} from './phonebook-actions';\r\n\r\nconst initialState = {\r\n   contacts: [],\r\n   filter: '',\r\n   loading: false,\r\n   error: null,\r\n};\r\n\r\nconst contacts = createReducer(initialState.contacts, {\r\n   [fetchContactSuccess]: (_, { payload }) => payload,\r\n   [addContactSuccess]: (state, { payload }) => [...state, payload],\r\n   [deleteContactSuccess]: (state, { payload }) =>\r\n      state.filter(({ id }) => id !== payload),\r\n});\r\n\r\nconst loading = createReducer(initialState.loading, {\r\n   [fetchContactRequest]: () => true,\r\n   [fetchContactSuccess]: () => false,\r\n   [fetchContactError]: () => false,\r\n   [addContactRequest]: () => true,\r\n   [addContactSuccess]: () => false,\r\n   [addContactError]: () => false,\r\n   [deleteContactRequest]: () => true,\r\n   [deleteContactSuccess]: () => false,\r\n   [deleteContactError]: () => false,\r\n});\r\n\r\nconst filter = createReducer(initialState.filter, {\r\n   [changeFilter]: (_, { payload }) => payload,\r\n});\r\n\r\nconst error = createReducer(initialState.error, {\r\n   [fetchContactError]: (_, { payload }) => payload,\r\n   [addContactError]: (_, { payload }) => payload,\r\n   [deleteContactError]: (_, { payload }) => payload,\r\n   [clearError]: () => null,\r\n});\r\n\r\nexport default combineReducers({\r\n   contacts,\r\n   filter,\r\n   loading,\r\n   error\r\n});","//redux\r\n//import { combineReducers } from 'redux'; \r\n//import { composeWithDevTools } from 'redux-devtools-extension';\r\n//import phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\n\r\n\r\n//const rootReducer = combineReducers({ //redux\r\n//   phonebook: phonebookReducer //redux\r\n//}) //redux\r\n\r\n//const store = createStore(rootReducer, composeWithDevTools()); //redux\r\n//export default store;\r\n\r\n//redux/toolkit with persist\r\n/*\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport {\r\n   persistStore,\r\n   persistReducer,\r\n   FLUSH,\r\n   REHYDRATE,\r\n   PAUSE,\r\n   PERSIST,\r\n   PURGE,\r\n   REGISTER,\r\n} from 'redux-persist';\r\nimport storage from 'redux-persist/lib/storage';\r\nimport phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\n\r\nconst middleware = [\r\n   ...getDefaultMiddleware({\r\n      serializableCheck: {\r\n         ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\r\n      },\r\n   }),\r\n   logger];\r\n\r\nconst phonebookPersistConfig = {\r\n   key: 'phonebook',\r\n   storage,\r\n   blacklist: ['filter']\r\n};\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      phonebook: persistReducer(phonebookPersistConfig, phonebookReducer)\r\n   },\r\n   middleware,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\n// eslint-disable-next-line import/no-anonymous-default-export\r\nexport default { store, persistor };*/\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport logger from 'redux-logger';\r\nimport phonebookReducer from '../redux/phonebook/phonebook-reducers';\r\n\r\nconst middleware = [\r\n   ...getDefaultMiddleware(),\r\n   logger,\r\n];\r\n\r\nconst store = configureStore({\r\n   reducer: {\r\n      phonebook: phonebookReducer,\r\n   },\r\n   middleware,\r\n   devTools: process.env.NODE_ENV === 'development',\r\n})\r\n\r\nexport default store;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n//import { BrowserRouter } from 'react-router-dom';\r\nimport { Provider } from 'react-redux';\r\nimport './index.css';\r\nimport App from './components/App/App';\r\nimport store from './redux/store';\r\n//import { PersistGate } from 'redux-persist/integration/react'\r\n//import { saveContact, deleteContact } from 'redux/actions';\r\n\r\n/*comment for persist*/\r\nReactDOM.render(\r\n  <Provider store={store}>\r\n    {/*<PersistGate loading={null} persistor={store.persistor}>*/}\r\n    <App />\r\n    {/*</PersistGate>*/}\r\n  </Provider>,\r\n  document.getElementById('root'),\r\n);\r\n"],"sourceRoot":""}